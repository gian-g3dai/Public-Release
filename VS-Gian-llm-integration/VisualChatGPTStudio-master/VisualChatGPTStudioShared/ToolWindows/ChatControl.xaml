<UserControl x:Class="Unakin.ToolWindows.ChatControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity" 
             xmlns:vsshell="clr-namespace:Microsoft.VisualStudio.Shell;assembly=Microsoft.VisualStudio.Shell.15.0"   
             xmlns:utils="clr-namespace:Unakin.Utils"
             Background="#1f1f1e"
             Foreground="White"
             mc:Ignorable="d"
             d:DesignHeight="300" d:DesignWidth="300"
             Name="ChatWindow" SizeChanged="UserControl_SizeChanged">
    <UserControl.Resources>
        <RoutedUICommand x:Key="sendCode" Text="Text" />
        <RoutedUICommand x:Key="sendCommand" Text="Text" />
        <RoutedUICommand x:Key="cancelCommand" Text="Text" />
        <utils:HighlightingDefinitionConverter x:Key="HighlightingDefinitionConverter" />

        <Style x:Key="GridHeader" TargetType="{x:Type GridViewColumnHeader}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type GridViewColumnHeader}">
                        <TextBlock Text="{TemplateBinding Content}" Padding="5" 
                     Width="{TemplateBinding Width}" TextAlignment="Left" Foreground="White" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="{x:Type Button}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                            <Grid>
                                <Rectangle x:Name="background" Fill="{TemplateBinding Background}" />
                                <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="background" Property="Stroke" Value="DarkGray"/>
                                <Setter TargetName="background" Property="StrokeThickness" Value="1"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="False">
                                <Setter TargetName="background" Property="Stroke" Value="DarkGray"/>
                                <Setter TargetName="background" Property="StrokeThickness" Value="0"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="ScrollBar">
            <Setter Property="Background" Value="#ffa6e1"/>
        </Style>
      <Style x:Key="SlidingToggleButton" TargetType="{x:Type ToggleButton}">
        <Setter Property="Width" Value="45"/> <!-- Keep width as 45 -->
        <Setter Property="Height" Value="20"/> <!-- Increased height -->
        <Setter Property="Background" Value="Gray"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Background="{TemplateBinding Background}" CornerRadius="10" BorderThickness="1">
                        <Grid>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal"/>
                                    <VisualState x:Name="MouseOver"/>
                                    <VisualState x:Name="Pressed"/>
                                    <VisualState x:Name="Disabled"/>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="CheckStates">
                                    <VisualState x:Name="Checked">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background)" Storyboard.TargetName="toggleBackground">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource {x:Static SystemColors.HighlightBrushKey}}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Unchecked"/>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Border x:Name="toggleBackground" Background="Red" CornerRadius="10" Margin="1">
                                <Grid>
                                   <TextBlock Text="ON" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="5,0,0,0" Foreground="Black" FontSize="8" FontWeight="Bold"/>
                                    <TextBlock Text="OFF" VerticalAlignment="Center" HorizontalAlignment="Right" Margin="0,0,5,0" Foreground="Black" FontSize="8" FontWeight="Bold"/>
                                    <Ellipse x:Name="rectToggle" Fill="White" Width="20" Height="20" HorizontalAlignment="Left" Margin="0,-1,0,0"/>
                                </Grid>
                            </Border>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter TargetName="toggleBackground" Property="Background" Value="#17db94"/>
                            <Setter TargetName="rectToggle" Property="HorizontalAlignment" Value="Right"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="false">
                            <Setter TargetName="toggleBackground" Property="Background" Value="#ffa6e1"/>
                            <Setter TargetName="rectToggle" Property="HorizontalAlignment" Value="Left"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="CustomCheckBoxStyle" TargetType="CheckBox">
        <Setter Property="Foreground" Value="Black"/>
        <!-- Text color -->
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="CheckBox">
                    <Grid Background="#454545" HorizontalAlignment="Left">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CheckStates">
                                <VisualState x:Name="Checked"/>
                                <VisualState x:Name="Unchecked"/>
                                <VisualState x:Name="Indeterminate"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                            <Border Background="White" Width="10" Height="10" CornerRadius="5" BorderBrush="Black" BorderThickness="1">
                                <Ellipse x:Name="CheckedVisual" Fill="#17db94" Visibility="Collapsed" Width="8" Height="8" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                            </Border>
                            <!-- Adjust the Margin here to move the text right and provide more space between the checkbox and text -->
                        <ContentPresenter Margin="120,0,0,0" VerticalAlignment="Center" HorizontalAlignment="Left"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="CheckedVisual" Property="Visibility" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="False">
                            <Setter TargetName="CheckedVisual" Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="CustomCheckBoxStyle1" TargetType="CheckBox">
        <Setter Property="Foreground" Value="#1f1f1e"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="CheckBox">
                    <Grid Background="#1f1f1e" HorizontalAlignment="Left">
                        <Grid.ColumnDefinitions>
                            <!-- Define columns for toggle and text -->
                            <ColumnDefinition Width="Auto"/>
                            <!-- Column for the toggle -->
                            <ColumnDefinition Width="*"/>
                            <!-- Column for the text, taking up the remaining space -->
                        </Grid.ColumnDefinitions>

                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CheckStates">
                                <VisualState x:Name="Checked"/>
                                <VisualState x:Name="Unchecked"/>
                                <VisualState x:Name="Indeterminate"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>

                        <Border Grid.Column="0" Background="White" Width="10" Height="10" CornerRadius="5" BorderBrush="Black" BorderThickness="1">
                            <Ellipse x:Name="CheckedVisual" Fill="#17db94" Visibility="Collapsed" Width="8" Height="8" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                        </Border>
                        <!-- Place ContentPresenter in the second column, removing the need for a large left margin -->
                        <ContentPresenter Grid.Column="1" VerticalAlignment="Center" HorizontalAlignment="Left"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="CheckedVisual" Property="Visibility" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="False">
                            <Setter TargetName="CheckedVisual" Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


        <Style TargetType="{x:Type TabControl}">
        <Setter Property="Background" Value="#454545"/>
        <Setter Property="BorderBrush" Value="#454545"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Padding" Value="0"/>
        <!--<Setter Property="FontWeight" Value="Bold"/>-->
        <Setter Property="TabStripPlacement" Value="Top"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabControl}">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        <TabPanel Grid.Row="0" Panel.ZIndex="1" Margin="0,-5,4,-1" IsItemsHost="True" Background="Transparent"/>
                        <Border Grid.Row="1" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                            <ContentPresenter ContentSource="SelectedContent"/>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- TabItem Style With Smaller Header Box -->
    <Style TargetType="{x:Type TabItem}">
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="FontSize" Value="12"/>
        <!-- Reduced padding -->
        <Setter Property="Padding" Value="5,2"/>
        <Setter Property="Background" Value="#454545"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabItem}">
                    <Border Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}">
                        <!-- Adjust ContentPresenter if necessary -->
                        <ContentPresenter x:Name="ContentSite" VerticalAlignment="Center" HorizontalAlignment="Center" ContentSource="Header" RecognizesAccessKey="True"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Background" Value="#454545"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    </UserControl.Resources>

    <UserControl.CommandBindings>
        <CommandBinding Command="{StaticResource sendCommand}" Executed="SendRequest" />
        <CommandBinding Command="{StaticResource cancelCommand}" Executed="CancelRequest" />
    </UserControl.CommandBindings>

    <UserControl.InputBindings>
        <KeyBinding Key="Enter" Modifiers="Ctrl+Alt" Command="{StaticResource sendCode}" />
        <KeyBinding Key="Enter" Modifiers="Ctrl" Command="{StaticResource sendCommand}" />
        <KeyBinding Key="Z" Modifiers="Alt" Command="{StaticResource cancelCommand}" />
    </UserControl.InputBindings>

    <Grid Name="grdRoot" Margin="5">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto" MinHeight="50"/>
        </Grid.RowDefinitions>

        
        <Grid Grid.Row="0">
            
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="4*"></ColumnDefinition>
                <ColumnDefinition Width="1*"></ColumnDefinition>
            </Grid.ColumnDefinitions>
            <StackPanel  Orientation="Horizontal" Grid.Column="0">
                <Label Content="Agent Hub" Margin="0,-1,0,0" Background="Transparent" Foreground="White" IsEnabled="{Binding CanShowEvents}" />
                <ToggleButton x:Name="ShowAgents" Style="{StaticResource SlidingToggleButton}" Margin="0,0,0,0" Checked="ChatType_Changed" Unchecked="ChatType_Changed" IsEnabled="{Binding CanShowEvents}" />
                <Button  Height="20" Width="80" Margin="15,1,0,0" Content="{Binding ChatName}" HorizontalAlignment="Left" VerticalAlignment ="Top" 
                    Name="btnChatStory" ToolTip="{Binding ChatName}" Click="btnChatStory_Click"
                    Background="Transparent" Foreground="White" BorderBrush="Transparent" />
                <Button  Height="20" Width="100" Margin="10,1,0,0" Content="Directory" HorizontalAlignment="Left" VerticalAlignment ="Top" 
                    Name="btnSelect" ToolTip="{Binding btnSelect.ToolTip}" Click="SelectDirectory"
                    Background="Transparent" Foreground="White" BorderBrush="Transparent" />
                <CheckBox x:Name="InContext" Content="Add Context" Checked="Context_Checked"  Margin="25,-2,0,0" Unchecked="Context_Unchecked" Style="{StaticResource CustomCheckBoxStyle1}" Foreground="White"
                    ToolTip="Enable and select a Directory to give context to your chat."/>

                <TextBlock Text="←'NEW'" Margin="10,0,0,0" VerticalAlignment="Center" Opacity="0.8" FontSize="10" FontWeight="Bold">
                    <TextBlock.Foreground>
                        <SolidColorBrush x:Name="AnimatedForeground" Color="#FFAAAAAA"/>
                    </TextBlock.Foreground>
                    <TextBlock.RenderTransform>
                        <TranslateTransform/>
                    </TextBlock.RenderTransform>
                    <TextBlock.Triggers>
                        <EventTrigger RoutedEvent="TextBlock.Loaded">
                            <BeginStoryboard>
                                <Storyboard>
                                    <!-- Rainbow color animation -->
                                    <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)" RepeatBehavior="Forever">
                                        <LinearColorKeyFrame Value="Red" KeyTime="0:0:0.5"/>
                                        <LinearColorKeyFrame Value="Orange" KeyTime="0:0:1"/>
                                        <LinearColorKeyFrame Value="Yellow" KeyTime="0:0:1.5"/>
                                        <LinearColorKeyFrame Value="Green" KeyTime="0:0:2"/>
                                        <LinearColorKeyFrame Value="Blue" KeyTime="0:0:2.5"/>
                                        <LinearColorKeyFrame Value="Green" KeyTime="0:0:3"/>
                                        <LinearColorKeyFrame Value="Yellow" KeyTime="0:0:3.5"/>
                                        <LinearColorKeyFrame Value="#FFAAAAAA" KeyTime="0:0:4"/>
                                        <!-- Returning to the starting color -->
                                    </ColorAnimationUsingKeyFrames>
                                    <!-- Reduced movement for subtlety -->
                                    <DoubleAnimation Duration="0:0:2" From="0" To="2" AutoReverse="True" RepeatBehavior="Forever"
                                        Storyboard.TargetProperty="RenderTransform.(TranslateTransform.X)"/>
                                    <!-- Opacity animation to disappear after 30 seconds -->
                                    <DoubleAnimation BeginTime="0:0:30" Duration="0:0:1" From="1" To="0" 
                                         Storyboard.TargetProperty="Opacity"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                    </TextBlock.Triggers>
                </TextBlock>


            </StackPanel>
            <Popup x:Name="settingsPopup" PlacementTarget="{Binding ElementName=settingsButton}" Placement="Bottom" AllowsTransparency="False" PopupAnimation="Fade">
                <Border x:Name="settingsPanel" Background="#282828A0" HorizontalAlignment="Center" VerticalAlignment="Center" Padding="10" CornerRadius="5">
                    <StackPanel>
                        <TextBlock Text="Settings" FontWeight="Bold" Foreground="White"/>
                        <!-- Settings content here -->

                        <!-- Save Settings Button -->
                        <Button x:Name="saveSettingsButton" Content="Save Settings" Margin="10" Click="SaveSettingsButton_Click"/>
                    </StackPanel>
                </Border>
            </Popup>

            <Button Grid.Column="1" Height="20" VerticalAlignment="Top" HorizontalAlignment="Right" Margin="5,0,5,0"
                Background="#282828A0"
                Name="btnSetting" ToolTip="Settings" Click="ToggleSettingsPanel">
                <Image Source="pack://application:,,,/Unakin;component/Resources/settings.png" Width="15" Height="15"/>
            </Button>
        </Grid>


        <Grid Grid.Row="1" Background="#454545">
            <!-- Example background for visibility -->
            <TabControl x:Name="GeneralAgentWorkflowTab" Margin="5" Visibility="Collapsed" Background="#454545">
                <TabItem Header="AGENT HUB" Margin="0,0,5,0" FontWeight="Bold">
                    <StackPanel Orientation="Vertical">
                        <!-- Changed to Vertical orientation -->
                        <StackPanel Orientation="Horizontal" Margin="5">
                            <TextBlock Text="Pick a Workflow" Foreground="White" FontWeight="Normal" FontStyle="Italic"/>
                            <Image Source="pack://application:,,,/Unakin;component/Resources/info-16.png" ToolTip="Click on autonomous workflow or build your own" Height="16" Width="16" Margin="5,0,0,0"/>
                        </StackPanel>
                        <StackPanel Orientation="Horizontal">
                            <CheckBox x:Name="CheckboxAgentsVisible" Content="Build a Workflow" Checked="Checkbox_Checked" Unchecked="Checkbox_Unchecked" Style="{StaticResource CustomCheckBoxStyle}" Foreground="White" FontWeight="Normal" ToolTip="Create a series of Agents with a specific functionality."/>
                            <CheckBox x:Name="CheckboxAgentsHidden" Content="      Autonomous Workflow" Checked="Checkbox_Checked" Unchecked="Checkbox_Unchecked" Style="{StaticResource CustomCheckBoxStyle}" Foreground="White" FontWeight="Normal" ToolTip="Make open-ended, more complex requests such as as entire gameplay features, and let the agents plan and complete these tasks for you."/>
                        </StackPanel>
                    </StackPanel>
                </TabItem>
            </TabControl>
        </Grid>



        <Grid x:Name="AgentHeader" Grid.Row="2" Background="#454545" Visibility="{Binding AgentHubVisiblity}"
              Width="{Binding ElementName=grdRoot,Path=ActualWidth}" HorizontalAlignment="Left" >
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="7*"></ColumnDefinition>
                <ColumnDefinition Width="3*"></ColumnDefinition>
            </Grid.ColumnDefinitions>
            <TextBlock Grid.Column="0" TextWrapping="WrapWithOverflow" Padding="5,5,0,0"
                       Foreground="White" VerticalAlignment="Center" HorizontalAlignment="Left" FontSize="12">
                <Run FontWeight="Bold" FontSize="12">View your agents or create a new one.</Run>
                <LineBreak/>
                <Run FontWeight="UltraLight" FontSize="10">* Drag and drop agents in your desired order.</Run>

            </TextBlock>
            <Border Grid.Column="1" BorderBrush="#FF000000" Background="#17db94" BorderThickness="0" CornerRadius="8" Height="25" HorizontalAlignment="Right" VerticalAlignment="Center" Margin="5,0,10,0" Padding="10,0,10,0" >
                <Button Content="+ New Agent" HorizontalAlignment="Right" VerticalAlignment="Center" 
                Name="btnWorkingDir" ToolTip="Add New Agent" Click="AddAgent_Click"
                Background="Transparent" Foreground="Black" BorderBrush="Transparent" FontWeight="Bold"  />
            </Border>
        </Grid>

        <ScrollViewer x:Name="scrollAgent" Grid.Row="3" Width="{Binding ElementName=grdRoot,Path=ActualWidth}" MaxHeight="150" Margin="0,-1,0,0" 
                      VerticalScrollBarVisibility="Auto" Visibility="{Binding AgentHubVisiblity}" Background="#454545">
            <ListView Name="lvAgents" Visibility="{Binding AgentHubVisiblity}"
                      PreviewMouseLeftButtonDown="ListBox_PreviewMouseLeftButtonDown"
                      AllowDrop="True" Drop="ListBox_Drop" DragOver="ListBox_DragOver" Cursor="Hand" 
                      Background="#454545" Foreground="White" BorderThickness="0" AlternationCount="7" 
                      >
                <ListView.View>

                    <GridView AllowsColumnReorder="True" ColumnHeaderContainerStyle="{StaticResource GridHeader}">
                        <GridViewColumn Header="Image" Width="50" x:Name="colImage">
                            <GridViewColumn.CellTemplate>
                                <DataTemplate>
                                    <Image Source="{Binding Image}" Width="24" Height="24"/>
                                </DataTemplate>
                            </GridViewColumn.CellTemplate>
                        </GridViewColumn>
                        <GridViewColumn Header="Workflow" Width="60" x:Name="colWorkflow">
                            <GridViewColumn.CellTemplate>
                                <DataTemplate>
                                    <Border  Background="#ffa6e1" 
                                                BorderThickness="0" CornerRadius="15"  >
                                        <Label  Width="30" Height="Auto"  BorderThickness="0" Background="Transparent" VerticalContentAlignment="Center" HorizontalContentAlignment="Center"
                                                Content="{Binding Sequence}" FontWeight="Bold">
                                        </Label>
                                    </Border>

                                </DataTemplate>
                            </GridViewColumn.CellTemplate>
                        </GridViewColumn>
                        <GridViewColumn Header="Name" DisplayMemberBinding="{Binding Name}" Width="100"/>
                        <GridViewColumn Header="Functionality" x:Name="colFunctionality" DisplayMemberBinding="{Binding Functionality}" Width="Auto"/>
                        <GridViewColumn Header="Active" Width="50">
                            <GridViewColumn.CellTemplate>
                                <DataTemplate>
                                    <CheckBox IsChecked="{Binding Path=Active, Mode=TwoWay}" Background="White" Foreground="White"  Cursor="Arrow" HorizontalAlignment="Center" Click="CheckBox_Click" >
                                    </CheckBox>
                                </DataTemplate>
                            </GridViewColumn.CellTemplate>
                        </GridViewColumn>
                        <GridViewColumn Header="Remove" Width="Auto">
                            <GridViewColumn.CellTemplate>
                                <DataTemplate>
                                    <Button CommandParameter="{Binding}" Click="RemoveAgent_Click" Background="Transparent" BorderBrush="Transparent" Cursor="Arrow" HorizontalAlignment="Center">
                                        <Image Source="pack://application:,,,/Unakin;component/Resources/removenew.png" Width="20" Height="20"/>
                                    </Button>
                                </DataTemplate>
                            </GridViewColumn.CellTemplate>
                        </GridViewColumn>
                    </GridView>
                </ListView.View>
                <ListView.ItemContainerStyle>
                    <Style TargetType="ListViewItem">
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="BorderBrush" Value="Green" />
                                <Setter Property="BorderThickness" Value="1" />
                                <Setter Property="Background" Value="LightGray" />
                                <Setter Property="Foreground" Value="Black" />
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </ListView.ItemContainerStyle>
            </ListView>
        </ScrollViewer>

        <Grid Name="grdHistory" Grid.Row="4" Visibility="{Binding HistoryVisiblity}">
            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
                <RowDefinition Height="5"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <ScrollViewer Grid.Row="0" VerticalScrollBarVisibility="Auto">
                <ItemsControl Grid.Row="0" ItemsSource="{Binding HistoryItems}" >
                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="5"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>
                                <Border Grid.Row="1" BorderBrush="#FF000000" Background="{Binding BackgroundColor}"  
                                            BorderThickness="0" CornerRadius="5,0,0,0" Height="Auto" Width="{Binding ElementName=scrollViewer,Path=ActualWidth}"
                                            HorizontalAlignment="Left" VerticalAlignment="Top" Padding="5" Margin="0" >
                                    <!--<Border.Style>
                                        <Style>
                                            <Setter Property="Border.BorderBrush" Value="Transparent"/>
                                            <Style.Triggers>
                                                <Trigger Property="Border.IsMouseOver" Value="True">
                                                    <Setter Property="Border.BorderBrush" Value="Green" />
                                                    <Setter Property="Border.BorderThickness" Value="1,1,1,0" />
                                                </Trigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Border.Style>-->
                                    <StackPanel  Orientation="Horizontal" Background="{Binding BackgroundColor}" >
                                        <Border  Background="{Binding TagColor}" 
                                                BorderThickness="0" CornerRadius="15" Height="30" Width="Auto" 
                                                Visibility="{Binding FirstTagVisiblity}" HorizontalAlignment="Left" VerticalAlignment="Top"  >
                                            <Label Height="25" Width="Auto" MinWidth="50" BorderThickness="0" Background="Transparent" VerticalContentAlignment="Center" HorizontalContentAlignment="Center"
                                                Content="{Binding FirstTag}" FontWeight="Bold">
                                            </Label>
                                        </Border>
                                        <Border Background="{Binding TagColor}" 
                                                BorderThickness="0" CornerRadius="15" Height="30" Width="Auto" Margin="5,0,0,0"
                                                Visibility="{Binding SecondTagVisiblity}" HorizontalAlignment="Left" VerticalAlignment="Top"  >
                                            <Label Height="25" Width="Auto" MinWidth="50" BorderThickness="0" Background="Transparent" VerticalContentAlignment="Center" HorizontalContentAlignment="Center"
                                                Content="{Binding SecondTag}" FontWeight="Bold">
                                            </Label>
                                        </Border>
                                        <TextBlock Text="{Binding CreationTime, StringFormat='{}{0:G}'}" Foreground="White" Margin="5"/>
                                    </StackPanel>
                                </Border>
                                <Border Grid.Row="2" Background="{Binding BackgroundColor}"  
                                            CornerRadius="0,0,0,5" Height="Auto" Width="{Binding ElementName=scrollViewer,Path=ActualWidth}"
                                            HorizontalAlignment="Left" VerticalAlignment="Top" Padding="5" Margin="0,-1,0,0">
                                    <!--<Border.Style>
                                        <Style>
                                            <Setter Property="Border.BorderBrush" Value="Transparent"/>
                                            <Style.Triggers>
                                                <Trigger Property="Border.IsMouseOver" Value="True">
                                                    <Setter Property="Border.BorderBrush" Value="Green" />
                                                    <Setter Property="Border.BorderThickness" Value="1,0,1,1" />
                                                </Trigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Border.Style>-->
                                    <avalonEdit:TextEditor        
                                    xmlns:avalonEdit="http://icsharpcode.net/sharpdevelop/avalonedit" VerticalScrollBarVisibility="Disabled" HorizontalScrollBarVisibility="{Binding ShowHorizontalScrollBar}"
                                    Name="histChat"
                                    ShowLineNumbers="False" Document="{Binding Document}" Background="{Binding BackgroundColor}"
                                    SyntaxHighlighting="{Binding Syntax, Converter={StaticResource HighlightingDefinitionConverter}}" IsReadOnly="True" 
                                    MouseDoubleClick="ChatDoubleClick"  
                                    Tag="{Binding ActionButtonTag}"
                                    Foreground="White">
                                        <avalonEdit:TextEditor.Resources>
                                            <Style TargetType="{x:Type avalonEdit:TextArea}">
                                                <Setter Property="Cursor" Value="Hand"/>
                                            </Style>
                                        </avalonEdit:TextEditor.Resources>
                                    </avalonEdit:TextEditor>
                                </Border>
                            </Grid>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>
            </ScrollViewer>
        </Grid>

        <Grid Name="grdChat" Grid.Row="4" Visibility="{Binding ChatVisiblity}">
            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
                <RowDefinition Height="5"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <Grid x:Name="OverlayContainer" Visibility="Collapsed" HorizontalAlignment="Center" VerticalAlignment="Center">
                <Border Width="300" Height="300" ClipToBounds="True">
                    <Border.Clip>
                        <EllipseGeometry Center="150,150" RadiusX="150" RadiusY="150"/>
                    </Border.Clip>
                    <Image x:Name="MyImageControl" Source="pack://application:,,,/Unakin;component/Resources/genie.png" Stretch="Fill"/>
                </Border>
                <TextBlock x:Name="MyTextBlock" HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="26" FontWeight="Bold" Foreground="White"/>
            </Grid>
            <ScrollViewer Grid.Row="0" x:Name="scrollViewer" VerticalScrollBarVisibility="Auto" >
                <ItemsControl Grid.Row="0" Name="chatList" ItemsSource="{Binding ChatItems}">
                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <Border Margin="0,0,0,-3">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="5"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>
                                <Border Grid.Row="1" BorderBrush="#FF000000" Background="{Binding BackgroundColor}"  
                                            BorderThickness="0" CornerRadius="5,5,0,0" Height="Auto" Width="{Binding ElementName=scrollViewer,Path=ActualWidth}"
                                            HorizontalAlignment="Left" VerticalAlignment="Top" Padding="5" Margin="0,0,0,0" Visibility="{Binding IsHeaderVisible}" >
                                    <StackPanel  Orientation="Horizontal" Background="{Binding BackgroundColor}" >
                                        <Border  Background="{Binding TagColor}" 
                                                BorderThickness="0" CornerRadius="15" Height="30" Width="Auto" 
                                                Visibility="{Binding FirstTagVisiblity}" HorizontalAlignment="Left" VerticalAlignment="Top"  >
                                            <Label Height="25" Width="Auto" MinWidth="50" BorderThickness="0" Background="Transparent" VerticalContentAlignment="Center" HorizontalContentAlignment="Center"
                                                Content="{Binding FirstTag}" FontWeight="Bold">
                                            </Label>
                                        </Border>
                                        <Border  Background="{Binding TagColor}" 
                                                BorderThickness="0" CornerRadius="15" Height="30" Width="Auto" Margin="5,0,0,0"
                                                Visibility="{Binding SecondTagVisiblity}" HorizontalAlignment="Left" VerticalAlignment="Top"  >
                                            <Label Height="25" Width="Auto" MinWidth="30" BorderThickness="0" Background="Transparent" VerticalContentAlignment="Center" HorizontalContentAlignment="Center"
                                                Content="{Binding SecondTag}" FontWeight="Bold">
                                            </Label>
                                        </Border>

                                    </StackPanel>
                                </Border>
                                
                                <Border Grid.Row="2" Background="{Binding BackgroundColor}"  
                                            CornerRadius="0,5,5,5" Height="Auto" Width="{Binding ElementName=scrollViewer,Path=ActualWidth}"
                                            HorizontalAlignment="Left" VerticalAlignment="Top" Padding="5" Margin="0,-2,0,0" Visibility="{Binding IsItemVisible}" >
                                    <avalonEdit:TextEditor        
                                    xmlns:avalonEdit="http://icsharpcode.net/sharpdevelop/avalonedit" VerticalScrollBarVisibility="Disabled" HorizontalScrollBarVisibility="{Binding ShowHorizontalScrollBar}"
                                    ShowLineNumbers="false" Document="{Binding Document}" Background="{Binding BackgroundColor}"
                                    SyntaxHighlighting="{Binding Syntax, Converter={StaticResource HighlightingDefinitionConverter}}" IsReadOnly="True" 
                                    PreviewMouseWheel="TextEditor_PreviewMouseWheel" PreviewKeyDown="PreviewKeyDown"  LostFocus="chatItem_LostFocus" 
                                    Tag="{Binding ActionButtonTag}" Visibility="{Binding IsItemVisible}"
                                    Foreground="White" Name="normChat">
                                        <avalonEdit:TextEditor.ContextMenu>
                                            <ContextMenu>
                                                <MenuItem Command="Copy" />
                                            </ContextMenu>
                                        </avalonEdit:TextEditor.ContextMenu>
                                        <avalonEdit:TextEditor.FontFamily>
                                            <FontFamily>Monaco</FontFamily>
                                        </avalonEdit:TextEditor.FontFamily>
                                    </avalonEdit:TextEditor>
                                </Border>

                                <Border Grid.Row="3" Background="#FF800080" 
                                        CornerRadius="0,0,5,5" Height="Auto" Width="{Binding ElementName=scrollViewer, Path=ActualWidth}"
                                        HorizontalAlignment="Left" VerticalAlignment="Top" Padding="5" Margin="0,0,0,0" Visibility="{Binding ButtonCopyVisibility}"
                                        Panel.ZIndex="1">
                                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Left">

                                        <Button Height="Auto" Width="Auto" Margin="0,0,10,0" 
                                                VerticalAlignment="Top" Name="btnCopy" Click="btnCopy_Click" 
                                                ToolTip="Copy code to clipboard" Tag="{Binding Index}" Background="Transparent" BorderBrush="Transparent">
                                            <StackPanel Orientation="Horizontal">
                                                <TextBlock VerticalAlignment="Center" Margin="0,0,5,0" Text="Copy Code" Foreground="White" FontSize="12"/>
                                                <Image Source="pack://application:,,,/Unakin;component/Resources/copynew.png" Width="13" Height="13"/>
                                            </StackPanel>
                                        </Button>

                                        <Button Height="Auto" Width="Auto" Margin="0,0,10,0"
                                                VerticalAlignment="Top" Name="btnTurbo" Click="btnReplace_Click" 
                                                ToolTip="Replace the highlighted code" Tag="{Binding Index}" Background="Transparent" BorderBrush="Transparent">
                                            <StackPanel Orientation="Horizontal">
                                                <TextBlock VerticalAlignment="Center" Margin="0,0,5,0" Text="Insert Code" Foreground="White" FontSize="12"/>
                                                <Image Source="pack://application:,,,/Unakin;component/Resources/plusnew_v1.png" Width="10" Height="10"/>
                                            </StackPanel>
                                        </Button>
        
                                        <Button Height="Auto" Width="Auto" Margin="0,0,5,0" 
                                                VerticalAlignment="Top" Name="btnShortSearch" Click="btnExpand_Click" 
                                                ToolTip="Show code in a bigger window" Tag="{Binding Index}" Background="Transparent" BorderBrush="Transparent">
                                            <StackPanel Orientation="Horizontal">
                                                <TextBlock VerticalAlignment="Center" Margin="0,0,5,0" Text="View Code" Foreground="White" FontSize="12"/>
                                                <Image Source="pack://application:,,,/Unakin;component/Resources/expandnew.png" Width="10" Height="10"/>
                                            </StackPanel>
                                        </Button>

                                    </StackPanel>
                                </Border>



                                <!--
                                <Button Grid.Row="4" Height="Auto" Width="16" HorizontalAlignment="Left" Margin="5,1,5,1" BorderThickness="0" Background ="Transparent"
                                    VerticalAlignment="Center" Name="btnAction" Click="btnAction_Click" ToolTip="{Binding ActionButtonTooltip}" Tag="{Binding ActionButtonTag}"  Visibility="{Binding ActionButtonVisiblity}" >
                                    <Image Source="{Binding ActionImageSource}" Width="16" Height="16" HorizontalAlignment="Center" VerticalAlignment="Center" Visibility="{Binding ActionButtonVisiblity}"/>
                                </Button>
                                -->
                            </Grid>
                            </Border>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>
            </ScrollViewer>
            <Border Grid.Row="2" CornerRadius="3,3,3,3" Background="Transparent" BorderThickness="1" BorderBrush="Green"
                    Visibility="{Binding ElementName=grdProgress, Path=Visibility}">
                <Grid Name="grdProgress"  Visibility="Collapsed" Margin="5,5,5,5">
                    <ProgressBar Minimum="0" Maximum="100" IsIndeterminate="True" Foreground="#ffa6e1" Background="Transparent" BorderThickness="0"/>
                    <TextBlock Text="Waiting for Response..." HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="White" />
                </Grid>
            </Border>

        </Grid>

        <ScrollViewer Grid.Row="5" VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto" >

            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="3*" />
                    <ColumnDefinition Width="1*" />
                </Grid.ColumnDefinitions>
                <Border Grid.Column="0" Height="Auto" Width="Auto" CornerRadius="5" Margin="3,0,0,2" Padding="5" 
                    Visibility="{Binding CommandVisiblity}" Background="#454545">
                    <ListBox  Name="lvSlash" ItemsSource="{Binding Commmands}" 
                          Background="#454545" Foreground="White" BorderThickness="0"  Height="Auto" MouseDoubleClick="ListBox_InitCommand" Visibility="{Binding CommandVisiblity}">
                        <ListBox.ItemTemplate>
                            <DataTemplate>
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock Text="{Binding}" />
                                </StackPanel>
                            </DataTemplate>
                        </ListBox.ItemTemplate>
                    </ListBox>
                </Border>
                <Button Grid.Column="1" Margin="0,0,5,5" HorizontalAlignment="Right"
                        Content="+ New Chat" FontWeight="Bold" Click="btnClear_Click"
                        Background="Transparent" Foreground="White" BorderBrush="Transparent">
                </Button>
            </Grid>

        </ScrollViewer>


        <Border Grid.Row="6" BorderBrush="#219626" Background="#171719"  
                BorderThickness="3" CornerRadius="10" Height="Auto" 
                HorizontalAlignment="Right" VerticalAlignment="Bottom" IsEnabled="{Binding CanRequest}" >

            <Grid Name="grdRequest" Background="Transparent" Margin="5,5,0,5"
                  Width="{Binding ElementName=grdRoot,Path=ActualWidth}" IsEnabled="{Binding CanRequest}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="1*"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <avalonEdit:TextEditor Grid.Column="0"       
                    xmlns:avalonEdit="http://icsharpcode.net/sharpdevelop/avalonedit" 
                    Name="txtRequest" BorderThickness="0" Height="50" 
                    Background="#171719" Foreground="White"  
                    HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Auto" 
                    ShowLineNumbers="false" TextChanged="RequestTextChanged">
                    <avalonEdit:TextEditor.ContextMenu>
                        <ContextMenu>
                            <MenuItem Command="Paste" />
                        </ContextMenu>
                    </avalonEdit:TextEditor.ContextMenu>
                    <!--<TextBlock Text="Chat with Unakin" 
                       Foreground="Gray" 
                       FontStyle="Italic"
                       Visibility="{Binding ElementName=txtRequest, Path=Document.Text.Text.IsEmpty, Converter={StaticResource BooleanToVisibilityConverter}}" 
                       Margin="5"/>-->
                </avalonEdit:TextEditor>
                <Button Grid.Column="1" Height="30" Width="30" Margin="0,0,15,0" BorderThickness="0"
                        Name="btnRequestSend" ToolTip="Send (Ctrl+Enter)" 
                        Command="{StaticResource sendCommand}"
                        HorizontalAlignment="Left" Background="Transparent">
                    <Image Source="pack://application:,,,/Unakin;component/Resources/send.png" Width="24" Height="24"/>
                </Button>
                <Button Grid.Column="1" Height="30" Width="30" Margin="0,0,15,0" BorderThickness="0"
                        Name="btnCancel" ToolTip="Cancel (Alt+Z)" Command="{StaticResource cancelCommand}"
                        HorizontalAlignment="Left" Background="Transparent" Visibility="Collapsed">
                    <Image Source="pack://application:,,,/Unakin;component/Resources/cancel.png" Width="24" Height="24"/>
                </Button>
            </Grid>
        </Border>
  
    </Grid>
    
</UserControl>
